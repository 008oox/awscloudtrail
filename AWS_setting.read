in views.py

we import these sections:
    current_file_directory = Path(__file__).resolve().parent
    want_directory = current_file_directory.parent.parent
    sys.path.append(str(want_directory))
    from Save import SettleAPI as SetAPI

Tree of directory:
awscloudtrail
├───awscloudtrail
│   └───settings.py
├───cloudtrailapp
│   ├───migrations
│   ├───templates
│   ├───timeStamp
│   ├───models.py
│   └───views.py
├───manager.py
└───images
Save
├───SettleAPI.py
├───cndev.txt
└───cnprod.txt

Code of SettleAPI.py:
import os, boto3
from typing import Generator
class SettleAPI:
    def Getfile(file: str):  # type: ignore
        with open(file, "r") as f:
            return (line.strip() for line in f.readlines())

    def Access(Gen: Generator):  # type: ignore
        Access = None
        Secret = None
        if Gen:
            Access = next(Gen)
            Secret = next(Gen)
        return Access, Secret

    def getAccessSecret(filename: str):  # type: ignore
        current_directory = os.path.dirname(os.path.abspath(__file__))
        file_path = os.path.join(current_directory, filename + ".txt")
        GetPath = SettleAPI.Getfile(file_path)  # type: ignore
        Access, Secret = SettleAPI.Access(GetPath)  # type: ignore
        return Access, Secret

    def cnDev():
        return SettleAPI.getAccessSecret("cndev")  # type: ignore

    def cnProd():
        return SettleAPI.getAccessSecret("cnprod")  # type: ignore

    def AWSDomain():
        ENV = {"cndev": "cnDev", "cnprod": "cnProd"}
        return ENV

    def valid_env(env: str):  # type: ignore
        if env not in SettleAPI.AWSDomain():
            raise ValueError('Invalid AWS ENV, should be "cnprod" or "cndev"')
        else:
            GetEnv = SettleAPI.AWSDomain()[env]
            GetAccessKey = getattr(SettleAPI, GetEnv)
            Access, Secret = GetAccessKey()
            return Access, Secret

    def getSession(env: str):  # type: ignore
        Access, Secret = SettleAPI.valid_env(env)  # type: ignore
        session = boto3.Session(aws_access_key_id=Access, aws_secret_access_key=Secret, region_name="cn-north-1")
        return session

    def getClient(env: str, service: str):  # type: ignore
        Access, Secret = SettleAPI.valid_env(env)  # type: ignore
        client = boto3.client(service, aws_access_key_id=Access, aws_secret_access_key=Secret, region_name="cn-north-1")
        return client


cndev.txt contains 2 string lines:
<Your Access key to visit AWS>
<Your Secure key to visit AWS>




